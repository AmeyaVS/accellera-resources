<?xml version="1.0" encoding="UTF-8" ?>
<!--                                                                      -->
<!-- Generated by Semifore, Inc. csrCompile                               -->
<!--   Version: 2009.01                                                   -->
<!--   Released on: Mar 25 2009 08:57:17                                  -->
<!--   Spirit IP-XACT 1.4 output                                          -->
<!--                                                                      -->
<!-- Input files:                                                         -->
<!--    interrupt.rdl                                                     -->
<!--                                                                      -->
<!-- Generated on: Wed Mar 25 09:18:47 2009                               -->
<!--           by: weber                                                  -->
<!--                                                                      -->
<!--
// Revision:    $Revision:$
// Date:        $Date:$
//
// Copyright (c) 2009 The SPIRIT Consortium.
//
// This work forms part of a deliverable of The SPIRIT Consortium.
//
// Use of these materials are governed by the legal terms and conditions
// outlined in the disclaimer available from www.spiritconsortium.org.
//
// This source file is provided on an AS IS basis.  The SPIRIT
// Consortium disclaims any warranty express or implied including
// any warranty of merchantability and fitness for use for a
// particular purpose.
//
// The user of the source file shall indemnify and hold The SPIRIT
// Consortium and its members harmless from any damages or liability.
// Users are requested to provide feedback to The SPIRIT Consortium
// using either mailto:feedback@lists.spiritconsortium.org or the forms at
// http://www.spiritconsortium.org/about/contact_us/
//
// This file may be copied, and distributed, with or without
// modifications; this notice must be included on any copy.
-->
<spirit:memoryMaps
 xmlns:spirit="http://www.spiritconsortium.org/XMLSchema/SPIRIT/1.4"
 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
 xsi:schemaLocation="http://www.spiritconsortium.org/XMLSchema/SPIRIT/1.4 http://www.spiritconsortium.org/XMLSchema/SPIRIT/1.4/index.xsd"
 >
 <spirit:memoryMap>
  <spirit:name>int_map_m</spirit:name>
  <spirit:displayName>Sample ASIC Interrupt Registers</spirit:displayName>
  <spirit:addressBlock>
   <spirit:name>int_map_m</spirit:name>
   <spirit:displayName>Sample ASIC Interrupt Registers</spirit:displayName>
   <spirit:description>This register map is designed how one can use interrupt concepts effectively in RDL [url=file://intr_hier.jpg/] interrupt hier tree [/url]</spirit:description>
   <spirit:baseAddress>0x0</spirit:baseAddress>
   <spirit:range>0x1018</spirit:range>
   <spirit:width>32</spirit:width>
   <spirit:usage>register</spirit:usage>
   <spirit:volatile>true</spirit:volatile>
   <spirit:register>
    <spirit:name>block_a_int</spirit:name>
    <spirit:displayName>Example Block Interrupt Register</spirit:displayName>
    <spirit:description>This is an example of an IP Block with 3 int events. 2 of these events are non fatal and the third event multi_bit_ecc_error is fatal</spirit:description>
    <spirit:addressOffset>0x0</spirit:addressOffset>
    <spirit:size>32</spirit:size>
    <spirit:volatile>true</spirit:volatile>
    <spirit:access>read-write</spirit:access>
    <spirit:reset>
     <spirit:value>0x0</spirit:value>
     <spirit:mask>0xffffffff</spirit:mask>
    </spirit:reset>
    <spirit:field>
     <spirit:name>crc_error</spirit:name>
     <spirit:description>A Packet with a CRC Error has been received</spirit:description>
     <spirit:bitOffset>0</spirit:bitOffset>
     <spirit:bitWidth>1</spirit:bitWidth>
     <spirit:access>read-write</spirit:access>
    </spirit:field>
    <spirit:field>
     <spirit:name>len_error</spirit:name>
     <spirit:description>A Packet with an invalid length has been received</spirit:description>
     <spirit:bitOffset>1</spirit:bitOffset>
     <spirit:bitWidth>1</spirit:bitWidth>
     <spirit:access>read-write</spirit:access>
    </spirit:field>
    <spirit:field>
     <spirit:name>multi_bit_ecc_error</spirit:name>
     <spirit:description>An uncorrectable multi-bit ECC error has been received</spirit:description>
     <spirit:bitOffset>2</spirit:bitOffset>
     <spirit:bitWidth>1</spirit:bitWidth>
     <spirit:access>read-write</spirit:access>
    </spirit:field>
    <spirit:field>
     <spirit:name>active_ecc_master</spirit:name>
     <spirit:description>Master who was active when ECC Error Occurred</spirit:description>
     <spirit:bitOffset>4</spirit:bitOffset>
     <spirit:bitWidth>4</spirit:bitWidth>
     <spirit:access>read-write</spirit:access>
    </spirit:field>
   </spirit:register>
   <spirit:register>
    <spirit:name>block_a_int_en</spirit:name>
    <spirit:displayName>Example Block Interrupt Enable Register</spirit:displayName>
    <spirit:description>This is an example of an IP Block with 3 int events</spirit:description>
    <spirit:addressOffset>0x4</spirit:addressOffset>
    <spirit:size>32</spirit:size>
    <spirit:access>read-write</spirit:access>
    <spirit:reset>
     <spirit:value>0x3</spirit:value>
     <spirit:mask>0xffffffff</spirit:mask>
    </spirit:reset>
    <spirit:field>
     <spirit:name>crc_error</spirit:name>
     <spirit:description>Enable: A Packet with a CRC Error has been received</spirit:description>
     <spirit:bitOffset>0</spirit:bitOffset>
     <spirit:bitWidth>1</spirit:bitWidth>
     <spirit:access>read-write</spirit:access>
    </spirit:field>
    <spirit:field>
     <spirit:name>len_error</spirit:name>
     <spirit:description>Enable: A Packet with an invalid length has been received</spirit:description>
     <spirit:bitOffset>1</spirit:bitOffset>
     <spirit:bitWidth>1</spirit:bitWidth>
     <spirit:access>read-write</spirit:access>
    </spirit:field>
    <spirit:field>
     <spirit:name>multi_bit_ecc_error</spirit:name>
     <spirit:description>Enable: A Packet with an invalid length has been received</spirit:description>
     <spirit:bitOffset>2</spirit:bitOffset>
     <spirit:bitWidth>1</spirit:bitWidth>
     <spirit:access>read-write</spirit:access>
    </spirit:field>
   </spirit:register>
   <spirit:register>
    <spirit:name>block_a_halt_en</spirit:name>
    <spirit:displayName>Example Block Halt Enable Register</spirit:displayName>
    <spirit:description>This is an example of an IP Block with 3 int events</spirit:description>
    <spirit:addressOffset>0x8</spirit:addressOffset>
    <spirit:size>32</spirit:size>
    <spirit:access>read-write</spirit:access>
    <spirit:reset>
     <spirit:value>0x4</spirit:value>
     <spirit:mask>0xffffffff</spirit:mask>
    </spirit:reset>
    <spirit:field>
     <spirit:name>crc_error</spirit:name>
     <spirit:description>Enable: A Packet with a CRC Error has been received</spirit:description>
     <spirit:bitOffset>0</spirit:bitOffset>
     <spirit:bitWidth>1</spirit:bitWidth>
     <spirit:access>read-write</spirit:access>
    </spirit:field>
    <spirit:field>
     <spirit:name>len_error</spirit:name>
     <spirit:description>Enable: A Packet with an invalid length has been received</spirit:description>
     <spirit:bitOffset>1</spirit:bitOffset>
     <spirit:bitWidth>1</spirit:bitWidth>
     <spirit:access>read-write</spirit:access>
    </spirit:field>
    <spirit:field>
     <spirit:name>multi_bit_ecc_error</spirit:name>
     <spirit:description>Enable: A Packet with an invalid length has been received</spirit:description>
     <spirit:bitOffset>2</spirit:bitOffset>
     <spirit:bitWidth>1</spirit:bitWidth>
     <spirit:access>read-write</spirit:access>
    </spirit:field>
   </spirit:register>
   <spirit:register>
    <spirit:name>block_b_int</spirit:name>
    <spirit:displayName>Example Block Interrupt Register</spirit:displayName>
    <spirit:description>This is an example of an IP Block with 3 int events. 2 of these events are non fatal and the third event multi_bit_ecc_error is fatal</spirit:description>
    <spirit:addressOffset>0x100</spirit:addressOffset>
    <spirit:size>32</spirit:size>
    <spirit:volatile>true</spirit:volatile>
    <spirit:access>read-write</spirit:access>
    <spirit:reset>
     <spirit:value>0x0</spirit:value>
     <spirit:mask>0xffffffff</spirit:mask>
    </spirit:reset>
    <spirit:field>
     <spirit:name>crc_error</spirit:name>
     <spirit:description>A Packet with a CRC Error has been received</spirit:description>
     <spirit:bitOffset>0</spirit:bitOffset>
     <spirit:bitWidth>1</spirit:bitWidth>
     <spirit:access>read-write</spirit:access>
    </spirit:field>
    <spirit:field>
     <spirit:name>len_error</spirit:name>
     <spirit:description>A Packet with an invalid length has been received</spirit:description>
     <spirit:bitOffset>1</spirit:bitOffset>
     <spirit:bitWidth>1</spirit:bitWidth>
     <spirit:access>read-write</spirit:access>
    </spirit:field>
    <spirit:field>
     <spirit:name>multi_bit_ecc_error</spirit:name>
     <spirit:description>An uncorrectable multi-bit ECC error has been received</spirit:description>
     <spirit:bitOffset>2</spirit:bitOffset>
     <spirit:bitWidth>1</spirit:bitWidth>
     <spirit:access>read-write</spirit:access>
    </spirit:field>
    <spirit:field>
     <spirit:name>active_ecc_master</spirit:name>
     <spirit:description>Master who was active when ECC Error Occurred</spirit:description>
     <spirit:bitOffset>4</spirit:bitOffset>
     <spirit:bitWidth>4</spirit:bitWidth>
     <spirit:access>read-write</spirit:access>
    </spirit:field>
   </spirit:register>
   <spirit:register>
    <spirit:name>block_b_int_en</spirit:name>
    <spirit:displayName>Example Block Interrupt Enable Register</spirit:displayName>
    <spirit:description>This is an example of an IP Block with 3 int events</spirit:description>
    <spirit:addressOffset>0x104</spirit:addressOffset>
    <spirit:size>32</spirit:size>
    <spirit:access>read-write</spirit:access>
    <spirit:reset>
     <spirit:value>0x3</spirit:value>
     <spirit:mask>0xffffffff</spirit:mask>
    </spirit:reset>
    <spirit:field>
     <spirit:name>crc_error</spirit:name>
     <spirit:description>Enable: A Packet with a CRC Error has been received</spirit:description>
     <spirit:bitOffset>0</spirit:bitOffset>
     <spirit:bitWidth>1</spirit:bitWidth>
     <spirit:access>read-write</spirit:access>
    </spirit:field>
    <spirit:field>
     <spirit:name>len_error</spirit:name>
     <spirit:description>Enable: A Packet with an invalid length has been received</spirit:description>
     <spirit:bitOffset>1</spirit:bitOffset>
     <spirit:bitWidth>1</spirit:bitWidth>
     <spirit:access>read-write</spirit:access>
    </spirit:field>
    <spirit:field>
     <spirit:name>multi_bit_ecc_error</spirit:name>
     <spirit:description>Enable: A Packet with an invalid length has been received</spirit:description>
     <spirit:bitOffset>2</spirit:bitOffset>
     <spirit:bitWidth>1</spirit:bitWidth>
     <spirit:access>read-write</spirit:access>
    </spirit:field>
   </spirit:register>
   <spirit:register>
    <spirit:name>block_b_halt_en</spirit:name>
    <spirit:displayName>Example Block Halt Enable Register</spirit:displayName>
    <spirit:description>This is an example of an IP Block with 3 int events</spirit:description>
    <spirit:addressOffset>0x108</spirit:addressOffset>
    <spirit:size>32</spirit:size>
    <spirit:access>read-write</spirit:access>
    <spirit:reset>
     <spirit:value>0x4</spirit:value>
     <spirit:mask>0xffffffff</spirit:mask>
    </spirit:reset>
    <spirit:field>
     <spirit:name>crc_error</spirit:name>
     <spirit:description>Enable: A Packet with a CRC Error has been received</spirit:description>
     <spirit:bitOffset>0</spirit:bitOffset>
     <spirit:bitWidth>1</spirit:bitWidth>
     <spirit:access>read-write</spirit:access>
    </spirit:field>
    <spirit:field>
     <spirit:name>len_error</spirit:name>
     <spirit:description>Enable: A Packet with an invalid length has been received</spirit:description>
     <spirit:bitOffset>1</spirit:bitOffset>
     <spirit:bitWidth>1</spirit:bitWidth>
     <spirit:access>read-write</spirit:access>
    </spirit:field>
    <spirit:field>
     <spirit:name>multi_bit_ecc_error</spirit:name>
     <spirit:description>Enable: A Packet with an invalid length has been received</spirit:description>
     <spirit:bitOffset>2</spirit:bitOffset>
     <spirit:bitWidth>1</spirit:bitWidth>
     <spirit:access>read-write</spirit:access>
    </spirit:field>
   </spirit:register>
   <spirit:register>
    <spirit:name>block_c_int</spirit:name>
    <spirit:displayName>Example Block Interrupt Register</spirit:displayName>
    <spirit:description>This is an example of an IP Block with 3 int events. 2 of these events are non fatal and the third event multi_bit_ecc_error is fatal</spirit:description>
    <spirit:addressOffset>0x200</spirit:addressOffset>
    <spirit:size>32</spirit:size>
    <spirit:volatile>true</spirit:volatile>
    <spirit:access>read-write</spirit:access>
    <spirit:reset>
     <spirit:value>0x0</spirit:value>
     <spirit:mask>0xffffffff</spirit:mask>
    </spirit:reset>
    <spirit:field>
     <spirit:name>crc_error</spirit:name>
     <spirit:description>A Packet with a CRC Error has been received</spirit:description>
     <spirit:bitOffset>0</spirit:bitOffset>
     <spirit:bitWidth>1</spirit:bitWidth>
     <spirit:access>read-write</spirit:access>
    </spirit:field>
    <spirit:field>
     <spirit:name>len_error</spirit:name>
     <spirit:description>A Packet with an invalid length has been received</spirit:description>
     <spirit:bitOffset>1</spirit:bitOffset>
     <spirit:bitWidth>1</spirit:bitWidth>
     <spirit:access>read-write</spirit:access>
    </spirit:field>
    <spirit:field>
     <spirit:name>multi_bit_ecc_error</spirit:name>
     <spirit:description>An uncorrectable multi-bit ECC error has been received</spirit:description>
     <spirit:bitOffset>2</spirit:bitOffset>
     <spirit:bitWidth>1</spirit:bitWidth>
     <spirit:access>read-write</spirit:access>
    </spirit:field>
    <spirit:field>
     <spirit:name>active_ecc_master</spirit:name>
     <spirit:description>Master who was active when ECC Error Occurred</spirit:description>
     <spirit:bitOffset>4</spirit:bitOffset>
     <spirit:bitWidth>4</spirit:bitWidth>
     <spirit:access>read-write</spirit:access>
    </spirit:field>
   </spirit:register>
   <spirit:register>
    <spirit:name>block_c_int_en</spirit:name>
    <spirit:displayName>Example Block Interrupt Enable Register</spirit:displayName>
    <spirit:description>This is an example of an IP Block with 3 int events</spirit:description>
    <spirit:addressOffset>0x204</spirit:addressOffset>
    <spirit:size>32</spirit:size>
    <spirit:access>read-write</spirit:access>
    <spirit:reset>
     <spirit:value>0x3</spirit:value>
     <spirit:mask>0xffffffff</spirit:mask>
    </spirit:reset>
    <spirit:field>
     <spirit:name>crc_error</spirit:name>
     <spirit:description>Enable: A Packet with a CRC Error has been received</spirit:description>
     <spirit:bitOffset>0</spirit:bitOffset>
     <spirit:bitWidth>1</spirit:bitWidth>
     <spirit:access>read-write</spirit:access>
    </spirit:field>
    <spirit:field>
     <spirit:name>len_error</spirit:name>
     <spirit:description>Enable: A Packet with an invalid length has been received</spirit:description>
     <spirit:bitOffset>1</spirit:bitOffset>
     <spirit:bitWidth>1</spirit:bitWidth>
     <spirit:access>read-write</spirit:access>
    </spirit:field>
    <spirit:field>
     <spirit:name>multi_bit_ecc_error</spirit:name>
     <spirit:description>Enable: A Packet with an invalid length has been received</spirit:description>
     <spirit:bitOffset>2</spirit:bitOffset>
     <spirit:bitWidth>1</spirit:bitWidth>
     <spirit:access>read-write</spirit:access>
    </spirit:field>
   </spirit:register>
   <spirit:register>
    <spirit:name>block_c_halt_en</spirit:name>
    <spirit:displayName>Example Block Halt Enable Register</spirit:displayName>
    <spirit:description>This is an example of an IP Block with 3 int events</spirit:description>
    <spirit:addressOffset>0x208</spirit:addressOffset>
    <spirit:size>32</spirit:size>
    <spirit:access>read-write</spirit:access>
    <spirit:reset>
     <spirit:value>0x4</spirit:value>
     <spirit:mask>0xffffffff</spirit:mask>
    </spirit:reset>
    <spirit:field>
     <spirit:name>crc_error</spirit:name>
     <spirit:description>Enable: A Packet with a CRC Error has been received</spirit:description>
     <spirit:bitOffset>0</spirit:bitOffset>
     <spirit:bitWidth>1</spirit:bitWidth>
     <spirit:access>read-write</spirit:access>
    </spirit:field>
    <spirit:field>
     <spirit:name>len_error</spirit:name>
     <spirit:description>Enable: A Packet with an invalid length has been received</spirit:description>
     <spirit:bitOffset>1</spirit:bitOffset>
     <spirit:bitWidth>1</spirit:bitWidth>
     <spirit:access>read-write</spirit:access>
    </spirit:field>
    <spirit:field>
     <spirit:name>multi_bit_ecc_error</spirit:name>
     <spirit:description>Enable: A Packet with an invalid length has been received</spirit:description>
     <spirit:bitOffset>2</spirit:bitOffset>
     <spirit:bitWidth>1</spirit:bitWidth>
     <spirit:access>read-write</spirit:access>
    </spirit:field>
   </spirit:register>
   <spirit:register>
    <spirit:name>block_d_int</spirit:name>
    <spirit:displayName>Example Block Interrupt Register</spirit:displayName>
    <spirit:description>This is an example of an IP Block with 3 int events. 2 of these events are non fatal and the third event multi_bit_ecc_error is fatal</spirit:description>
    <spirit:addressOffset>0x300</spirit:addressOffset>
    <spirit:size>32</spirit:size>
    <spirit:volatile>true</spirit:volatile>
    <spirit:access>read-write</spirit:access>
    <spirit:reset>
     <spirit:value>0x0</spirit:value>
     <spirit:mask>0xffffffff</spirit:mask>
    </spirit:reset>
    <spirit:field>
     <spirit:name>crc_error</spirit:name>
     <spirit:description>A Packet with a CRC Error has been received</spirit:description>
     <spirit:bitOffset>0</spirit:bitOffset>
     <spirit:bitWidth>1</spirit:bitWidth>
     <spirit:access>read-write</spirit:access>
    </spirit:field>
    <spirit:field>
     <spirit:name>len_error</spirit:name>
     <spirit:description>A Packet with an invalid length has been received</spirit:description>
     <spirit:bitOffset>1</spirit:bitOffset>
     <spirit:bitWidth>1</spirit:bitWidth>
     <spirit:access>read-write</spirit:access>
    </spirit:field>
    <spirit:field>
     <spirit:name>multi_bit_ecc_error</spirit:name>
     <spirit:description>An uncorrectable multi-bit ECC error has been received</spirit:description>
     <spirit:bitOffset>2</spirit:bitOffset>
     <spirit:bitWidth>1</spirit:bitWidth>
     <spirit:access>read-write</spirit:access>
    </spirit:field>
    <spirit:field>
     <spirit:name>active_ecc_master</spirit:name>
     <spirit:description>Master who was active when ECC Error Occurred</spirit:description>
     <spirit:bitOffset>4</spirit:bitOffset>
     <spirit:bitWidth>4</spirit:bitWidth>
     <spirit:access>read-write</spirit:access>
    </spirit:field>
   </spirit:register>
   <spirit:register>
    <spirit:name>block_d_int_en</spirit:name>
    <spirit:displayName>Example Block Interrupt Enable Register</spirit:displayName>
    <spirit:description>This is an example of an IP Block with 3 int events</spirit:description>
    <spirit:addressOffset>0x304</spirit:addressOffset>
    <spirit:size>32</spirit:size>
    <spirit:access>read-write</spirit:access>
    <spirit:reset>
     <spirit:value>0x3</spirit:value>
     <spirit:mask>0xffffffff</spirit:mask>
    </spirit:reset>
    <spirit:field>
     <spirit:name>crc_error</spirit:name>
     <spirit:description>Enable: A Packet with a CRC Error has been received</spirit:description>
     <spirit:bitOffset>0</spirit:bitOffset>
     <spirit:bitWidth>1</spirit:bitWidth>
     <spirit:access>read-write</spirit:access>
    </spirit:field>
    <spirit:field>
     <spirit:name>len_error</spirit:name>
     <spirit:description>Enable: A Packet with an invalid length has been received</spirit:description>
     <spirit:bitOffset>1</spirit:bitOffset>
     <spirit:bitWidth>1</spirit:bitWidth>
     <spirit:access>read-write</spirit:access>
    </spirit:field>
    <spirit:field>
     <spirit:name>multi_bit_ecc_error</spirit:name>
     <spirit:description>Enable: A Packet with an invalid length has been received</spirit:description>
     <spirit:bitOffset>2</spirit:bitOffset>
     <spirit:bitWidth>1</spirit:bitWidth>
     <spirit:access>read-write</spirit:access>
    </spirit:field>
   </spirit:register>
   <spirit:register>
    <spirit:name>block_d_halt_en</spirit:name>
    <spirit:displayName>Example Block Halt Enable Register</spirit:displayName>
    <spirit:description>This is an example of an IP Block with 3 int events</spirit:description>
    <spirit:addressOffset>0x308</spirit:addressOffset>
    <spirit:size>32</spirit:size>
    <spirit:access>read-write</spirit:access>
    <spirit:reset>
     <spirit:value>0x4</spirit:value>
     <spirit:mask>0xffffffff</spirit:mask>
    </spirit:reset>
    <spirit:field>
     <spirit:name>crc_error</spirit:name>
     <spirit:description>Enable: A Packet with a CRC Error has been received</spirit:description>
     <spirit:bitOffset>0</spirit:bitOffset>
     <spirit:bitWidth>1</spirit:bitWidth>
     <spirit:access>read-write</spirit:access>
    </spirit:field>
    <spirit:field>
     <spirit:name>len_error</spirit:name>
     <spirit:description>Enable: A Packet with an invalid length has been received</spirit:description>
     <spirit:bitOffset>1</spirit:bitOffset>
     <spirit:bitWidth>1</spirit:bitWidth>
     <spirit:access>read-write</spirit:access>
    </spirit:field>
    <spirit:field>
     <spirit:name>multi_bit_ecc_error</spirit:name>
     <spirit:description>Enable: A Packet with an invalid length has been received</spirit:description>
     <spirit:bitOffset>2</spirit:bitOffset>
     <spirit:bitWidth>1</spirit:bitWidth>
     <spirit:access>read-write</spirit:access>
    </spirit:field>
   </spirit:register>
   <spirit:register>
    <spirit:name>master_int</spirit:name>
    <spirit:displayName>Master Interrupt Status Register</spirit:displayName>
    <spirit:description>This register contains the status of the 4 lower Module interrupts. Also an interrupt signal (myMasterInt) is generated which is the 'OR' of the four Module interrupts. A Halt signal is also generated which represents the bitwise or the masked/enabled halt bits</spirit:description>
    <spirit:addressOffset>0x1000</spirit:addressOffset>
    <spirit:size>32</spirit:size>
    <spirit:volatile>true</spirit:volatile>
    <spirit:access>read-write</spirit:access>
    <spirit:reset>
     <spirit:value>0x0</spirit:value>
     <spirit:mask>0xffffffff</spirit:mask>
    </spirit:reset>
    <spirit:field>
     <spirit:name>module_a_int</spirit:name>
     <spirit:description>An interrupt has occurred with ModuleA. Software must read the ModuleA Master Interrupt Register in order to determine the source of the interrupt.</spirit:description>
     <spirit:bitOffset>0</spirit:bitOffset>
     <spirit:bitWidth>1</spirit:bitWidth>
     <spirit:access>read-only</spirit:access>
    </spirit:field>
    <spirit:field>
     <spirit:name>module_b_int</spirit:name>
     <spirit:description>An interrupt has occurred with ModuleB. Software must read the ModuleB Interrupt Register in order to determine the source of the interrupt.</spirit:description>
     <spirit:bitOffset>1</spirit:bitOffset>
     <spirit:bitWidth>1</spirit:bitWidth>
     <spirit:access>read-only</spirit:access>
    </spirit:field>
    <spirit:field>
     <spirit:name>module_c_int</spirit:name>
     <spirit:description>An interrupt has occurred with ModuleC. Software must read the ModuleC Master Interrupt Regsiter in order to determine the source of the interrupt.</spirit:description>
     <spirit:bitOffset>2</spirit:bitOffset>
     <spirit:bitWidth>1</spirit:bitWidth>
     <spirit:access>read-only</spirit:access>
    </spirit:field>
    <spirit:field>
     <spirit:name>module_d_int</spirit:name>
     <spirit:description>An interrupt has occurred with ModuleD. Software ust read the ModuleD Master Interrupt Register in order to determine the source of the interrupt.</spirit:description>
     <spirit:bitOffset>3</spirit:bitOffset>
     <spirit:bitWidth>1</spirit:bitWidth>
     <spirit:access>read-only</spirit:access>
    </spirit:field>
   </spirit:register>
   <spirit:register>
    <spirit:name>master_halt</spirit:name>
    <spirit:displayName>Master Interrupt Status Register</spirit:displayName>
    <spirit:description>This register contains the status of the 4 lower Module interrupts. Also an interrupt signal (myMasterInt) is generated which is the 'OR' of the four Module interrupts. A Halt signal is also generated which represents the bitwise or the masked/enabled halt bits</spirit:description>
    <spirit:addressOffset>0x1004</spirit:addressOffset>
    <spirit:size>32</spirit:size>
    <spirit:volatile>true</spirit:volatile>
    <spirit:access>read-write</spirit:access>
    <spirit:reset>
     <spirit:value>0x0</spirit:value>
     <spirit:mask>0xffffffff</spirit:mask>
    </spirit:reset>
    <spirit:field>
     <spirit:name>module_a_int</spirit:name>
     <spirit:description>An interrupt has occurred with ModuleA. Software must read the ModuleA Master Interrupt Register in order to determine the source of the interrupt.</spirit:description>
     <spirit:bitOffset>0</spirit:bitOffset>
     <spirit:bitWidth>1</spirit:bitWidth>
     <spirit:access>read-only</spirit:access>
    </spirit:field>
    <spirit:field>
     <spirit:name>module_b_int</spirit:name>
     <spirit:description>An interrupt has occurred with ModuleB. Software must read the ModuleB Interrupt Register in order to determine the source of the interrupt.</spirit:description>
     <spirit:bitOffset>1</spirit:bitOffset>
     <spirit:bitWidth>1</spirit:bitWidth>
     <spirit:access>read-only</spirit:access>
    </spirit:field>
    <spirit:field>
     <spirit:name>module_c_int</spirit:name>
     <spirit:description>An interrupt has occurred with ModuleC. Software must read the ModuleC Master Interrupt Regsiter in order to determine the source of the interrupt.</spirit:description>
     <spirit:bitOffset>2</spirit:bitOffset>
     <spirit:bitWidth>1</spirit:bitWidth>
     <spirit:access>read-only</spirit:access>
    </spirit:field>
    <spirit:field>
     <spirit:name>module_d_int</spirit:name>
     <spirit:description>An interrupt has occurred with ModuleD. Software ust read the ModuleD Master Interrupt Register in order to determine the source of the interrupt.</spirit:description>
     <spirit:bitOffset>3</spirit:bitOffset>
     <spirit:bitWidth>1</spirit:bitWidth>
     <spirit:access>read-only</spirit:access>
    </spirit:field>
   </spirit:register>
   <spirit:register>
    <spirit:name>master_int_en</spirit:name>
    <spirit:displayName>Master Interrupt Enable Register</spirit:displayName>
    <spirit:description>Configurable register used in order to enable the corresponding interrupts found in myMasterInt register.</spirit:description>
    <spirit:addressOffset>0x1008</spirit:addressOffset>
    <spirit:size>32</spirit:size>
    <spirit:access>read-write</spirit:access>
    <spirit:reset>
     <spirit:value>0x0</spirit:value>
     <spirit:mask>0xffffffff</spirit:mask>
    </spirit:reset>
    <spirit:field>
     <spirit:name>module_a_int_en</spirit:name>
     <spirit:description>Interrupt enable for ModuelA Interrupts. 1 = enable, 0 = disable</spirit:description>
     <spirit:bitOffset>0</spirit:bitOffset>
     <spirit:bitWidth>1</spirit:bitWidth>
     <spirit:access>read-write</spirit:access>
    </spirit:field>
    <spirit:field>
     <spirit:name>module_b_int_en</spirit:name>
     <spirit:description>Interrupt enable for ModuleB Interrupts. 1 = enable, 0 = disable</spirit:description>
     <spirit:bitOffset>1</spirit:bitOffset>
     <spirit:bitWidth>1</spirit:bitWidth>
     <spirit:access>read-write</spirit:access>
    </spirit:field>
    <spirit:field>
     <spirit:name>module_c_int_en</spirit:name>
     <spirit:description>Interrupt enable for ModuleC Interrupts. 1 = enable, 0 = disable</spirit:description>
     <spirit:bitOffset>2</spirit:bitOffset>
     <spirit:bitWidth>1</spirit:bitWidth>
     <spirit:access>read-write</spirit:access>
    </spirit:field>
    <spirit:field>
     <spirit:name>module_d_int_en</spirit:name>
     <spirit:description>Interrupt enable for ModuleD Interrupts. 1 = enable, 0 = disable</spirit:description>
     <spirit:bitOffset>3</spirit:bitOffset>
     <spirit:bitWidth>1</spirit:bitWidth>
     <spirit:access>read-write</spirit:access>
    </spirit:field>
   </spirit:register>
   <spirit:register>
    <spirit:name>master_halt_en</spirit:name>
    <spirit:displayName>Master Halt Enable Register</spirit:displayName>
    <spirit:description>Configurable register used in order to enable the corresponding interrupts found in myMasterInt register.</spirit:description>
    <spirit:addressOffset>0x100c</spirit:addressOffset>
    <spirit:size>32</spirit:size>
    <spirit:access>read-write</spirit:access>
    <spirit:reset>
     <spirit:value>0x0</spirit:value>
     <spirit:mask>0xffffffff</spirit:mask>
    </spirit:reset>
    <spirit:field>
     <spirit:name>module_a_halt_en</spirit:name>
     <spirit:description>Halt enable for ModuelA Interrupts. 1 = enable, 0 = disable</spirit:description>
     <spirit:bitOffset>0</spirit:bitOffset>
     <spirit:bitWidth>1</spirit:bitWidth>
     <spirit:access>read-write</spirit:access>
    </spirit:field>
    <spirit:field>
     <spirit:name>module_b_halt_en</spirit:name>
     <spirit:description>Halt enable for ModuleB Interrupts. 1 = enable, 0 = disable</spirit:description>
     <spirit:bitOffset>1</spirit:bitOffset>
     <spirit:bitWidth>1</spirit:bitWidth>
     <spirit:access>read-write</spirit:access>
    </spirit:field>
    <spirit:field>
     <spirit:name>module_c_halt_en</spirit:name>
     <spirit:description>Halt enable for ModuleC Interrupts. 1 = enable, 0 = disable</spirit:description>
     <spirit:bitOffset>2</spirit:bitOffset>
     <spirit:bitWidth>1</spirit:bitWidth>
     <spirit:access>read-write</spirit:access>
    </spirit:field>
    <spirit:field>
     <spirit:name>module_d_halt_en</spirit:name>
     <spirit:description>Halt enable for ModuleD Interrupts. 1 = enable, 0 = disable</spirit:description>
     <spirit:bitOffset>3</spirit:bitOffset>
     <spirit:bitWidth>1</spirit:bitWidth>
     <spirit:access>read-write</spirit:access>
    </spirit:field>
   </spirit:register>
   <spirit:register>
    <spirit:name>global_int</spirit:name>
    <spirit:displayName>My Final Int/Halt Register</spirit:displayName>
    <spirit:description>This distills a lower level interrupts into a final bit than can me masked</spirit:description>
    <spirit:addressOffset>0x1010</spirit:addressOffset>
    <spirit:size>32</spirit:size>
    <spirit:volatile>true</spirit:volatile>
    <spirit:access>read-write</spirit:access>
    <spirit:reset>
     <spirit:value>0x0</spirit:value>
     <spirit:mask>0xffffffff</spirit:mask>
    </spirit:reset>
    <spirit:field>
     <spirit:name>global_int</spirit:name>
     <spirit:description>Global Interrupt</spirit:description>
     <spirit:bitOffset>0</spirit:bitOffset>
     <spirit:bitWidth>1</spirit:bitWidth>
     <spirit:access>read-only</spirit:access>
    </spirit:field>
    <spirit:field>
     <spirit:name>global_halt</spirit:name>
     <spirit:description>Global Halt</spirit:description>
     <spirit:bitOffset>1</spirit:bitOffset>
     <spirit:bitWidth>1</spirit:bitWidth>
     <spirit:access>read-only</spirit:access>
    </spirit:field>
   </spirit:register>
   <spirit:register>
    <spirit:name>global_int_en</spirit:name>
    <spirit:displayName>My Final Enable Register</spirit:displayName>
    <spirit:description>This enable allows all interrupts/halts to be suppressed with a single bit</spirit:description>
    <spirit:addressOffset>0x1014</spirit:addressOffset>
    <spirit:size>32</spirit:size>
    <spirit:access>read-write</spirit:access>
    <spirit:reset>
     <spirit:value>0x0</spirit:value>
     <spirit:mask>0xffffffff</spirit:mask>
    </spirit:reset>
    <spirit:field>
     <spirit:name>global_int_en</spirit:name>
     <spirit:description>Global Interrupt Enable. 1 = enable, 0 = disable</spirit:description>
     <spirit:bitOffset>0</spirit:bitOffset>
     <spirit:bitWidth>1</spirit:bitWidth>
     <spirit:access>read-write</spirit:access>
    </spirit:field>
    <spirit:field>
     <spirit:name>global_halt_en</spirit:name>
     <spirit:description>Global Halt Enable. 1 = enable, 0 = disable</spirit:description>
     <spirit:bitOffset>1</spirit:bitOffset>
     <spirit:bitWidth>1</spirit:bitWidth>
     <spirit:access>read-write</spirit:access>
    </spirit:field>
   </spirit:register>
  </spirit:addressBlock>
 </spirit:memoryMap>
</spirit:memoryMaps>
